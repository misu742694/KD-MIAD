from datetime import datetime
import torch

# General constants
NORMAL = "Normal"
UNIFORM = "Uniform"
PYTORCH_INIT = "PyTorch"
now = datetime.now()
TIME_STAMP = now.strftime("%Y_%m_%d_%H")
DEVICE = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")

# General hyper parameters
MAX_EPOCH =100
TRAIN_EPOCH = 100
BATCH_SIZE = 64
RESERVED_SAMPLE = 0
INIT_MODE = PYTORCH_INIT
BATCH_TRAINING = True

# Data set related
TEXAS100 = "Texas100"
TEXAS100_PATH = "./datasets-master/texas100.npz"
DEFAULT_SET = TEXAS100


MENTRLOSS_NORMAL=0.4605
MENTRLOSS=0.2
STULOSS_NORMAL=150
STULOSS=20



LABEL_COL = 0
LABEL_SIZE = 100
TRAIN_TEST_RATIO = (0.7, 0.3)

# Data set Distribution
CLASS_BASED = "CLASS_BASED"
DIRICHLET="dirichlet"
DIRICHLET_ALPHA=0.5
LABEL_PARTITION=None

DEFAULT_DISTRIBUTION = DIRICHLET

# Robust AGR
TRMEAN = "Trimmed Mean"
MULTI_KRUM = "Multi-Krum"
MEDIAN = "Median"
FANG = "Fang"
NONE = "None"
FL_TRUST="Fl-trust"
CONTRIBUTION_AWARE="CONTRIBUTION_AWARE"
DEFAULT_AGR = FANG

# Federated learning parameters
NUMBER_OF_PARTICIPANTS = 10
PARAMETER_EXCHANGE_RATE = 1
PARAMETER_SAMPLE_THRESHOLD = 1
GRADIENT_EXCHANGE_RATE = 1
GRADIENT_SAMPLE_THRESHOLD = 1

# Attacker related
NUMBER_OF_ADVERSARY = 1
NUMBER_OF_ATTACK_SAMPLES = 1024
RECORD_PER_N_ROUNDS = 200
BLACK_BOX_MEMBER_RATE = 0.5
WHITE_BOX_SHUFFLE_COPIES = 5
SCORE_BASED_STRATEGY = "Score_based"
NORM_BASED_STRATEGY = "Norm_based"
WHITE_BOX_PREDICTION_STRATEGY = SCORE_BASED_STRATEGY
WHITE_BOX_GLOBAL_TARGETED_ROUND = 100
FRACTION_OF_ASCENDING_SAMPLES = 1
NORM_SCALLING = 5
ASCENT_FACTOR = 15
ADJUST_RATE = 0.002
MISLEAD_FACTOR = 10
KEEP_CLASS = None


# IO related
EXPERIMENTAL_DATA_DIRECTORY = "./data_honest_defence/"

COVER_FACTOR=0

# Random seed
GLOBAL_SEED = 9

FL_TRUST_SET=0
